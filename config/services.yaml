# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    admin.biography:
        class: App\Admin\BiographyAdmin
        arguments: [~, App\Entity\Biography, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Users, label: Biography, icon: '<i class="fa fa-users"></i>' }
        public: true

    admin.book:
        class: App\Admin\BookAdmin
        arguments: [~, App\Entity\Book, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Books, label: Book core, icon: '<i class="fa fa-book"></i>' }
        public: true

    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Books, label: Categories, icon: '<i class="fa fa-book"></i>' }
        public: true

    admin.comment:
        class: App\Admin\CommentAdmin
        arguments: [~, App\Entity\Comment, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Users, label: Comments, icon: '<i class="fa fa-users"></i>' }
        public: true

    admin.library:
        class: App\Admin\LibraryAdmin
        arguments: [~, App\Entity\Library, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Users, label: Libraries, icon: '<i class="fa fa-users"></i>' }
        public: true

    admin.rate:
        class: App\Admin\RateAdmin
        arguments: [~, App\Entity\Rate, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Users, label: Rates, icon: '<i class="fa fa-users"></i>' }
        public: true

    admin.share:
        class: App\Admin\ShareAdmin
        arguments: [~, App\Entity\Share, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Shares, on_top: true, label: Shares, icon: '<i class="fa fa-share-alt"></i>' }
        public: true

    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Users, label: User core, icon: '<i class="fa fa-users"></i>' }
        public: true

    sonata.block.service.stats:
        class: App\Admin\Block\StatsBlockService
        arguments:
            - "sonata.block.service.stats"
            - "@templating"
            - "@sonata.admin.pool"
            - "@doctrine.orm.entity_manager"
            - "@security.token_storage"
        tags:
            - { name: sonata.block }

    sonata.block.service.share_list:
        class: App\Admin\Block\ShareListService
        arguments:
            - "sonata.block.service.share_list"
            - "@templating"
            - "@sonata.admin.pool"
            - "@doctrine.orm.entity_manager"
            - "@security.token_storage"
        tags:
            - { name: sonata.block }